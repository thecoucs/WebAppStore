@model WebAppStore.Models.ProductoModel

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>

@{ 
    int idCatInit = Model.Categoria.Id - 1;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ProductoModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Partial("_Categorias", (List<WebAppStore.Models.CategoriaModel>)ViewBag.ListaCategorias)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.Hidden("originalCat", idCatInit, new { @id="originalCat"})
    @Html.HiddenFor(model => model.Categoria.Id, new { @id = "idCategoria" })

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Regresar al Inicio", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    window.onload = function () {
        document.getElementById("lstCategories").selectedIndex = document.getElementById("originalCat").value;
    };
    document.getElementById("lstCategories").selectedIndex = document.getElementById("originalCat").value;
    
    function cambioCat() {
        var categorias = document.getElementById("lstCategories");
        var categoriaOption = categorias.options[categorias.selectedIndex].value;
        document.getElementById("idCategoria").value = categoriaOption;
    }

</script>
